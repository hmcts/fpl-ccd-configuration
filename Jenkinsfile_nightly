#!groovy

properties([
  pipelineTriggers([cron('20 21 * * *')])
])

@Library('Infrastructure')

def type = 'java'

def product = 'fpl'
def component = 'case-service'

withNightlyPipeline(type, product, component) {
  enableFullFunctionalTest()

  after('mutationTest') {
    withSonarQubeEnv('SonarQube') {
      sh './gradlew --info sonarqube'
    }
  }

  before('fullFunctionalTest') {
    env.URL = 'https://www-ccd.aat.platform.hmcts.net'
    env.PROXY_SERVER = 'proxyout.reform.hmcts.net:8080'

    try {
      sh('./gradlew --no-daemon --info --rerun-tasks functional')
    } finally {
      archiveArtifacts allowEmptyArchive: true, artifacts: 'output/**/*'
    }
  }
}
